/*
 * generated by Xtext 2.12.0
 */
package org.palladiosimulator.commons.stoex.formatting2

import com.google.inject.Inject
import de.uka.ipd.sdq.stoex.BooleanOperatorExpression
import de.uka.ipd.sdq.stoex.IfElseExpression
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.palladiosimulator.commons.stoex.services.StoexGrammarAccess

class StoexFormatter extends AbstractFormatter2 {
	
	@Inject extension StoexGrammarAccess

	def dispatch void format(IfElseExpression ifElseExpression, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		ifElseExpression.getIfExpression.format;
		ifElseExpression.getElseExpression.format;
		ifElseExpression.getConditionExpression.format;
	}

	def dispatch void format(BooleanOperatorExpression booleanOperatorExpression, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		booleanOperatorExpression.getRight.format;
		booleanOperatorExpression.getLeft.format;
	}
	
	// TODO: implement for CompareExpression, TermExpression, ProductExpression, PowerExpression, NotExpression, NegativeExpression, DoubleLiteral, ProbabilityFunctionLiteral, Parenthesis, FunctionLiteral, Variable, NamespaceReference, IntLiteral, UnitDivision, UnitMultiplication, BoxedPDF, ProbabilityMassFunction, UnitPower
}
